name: DICOM Scapy Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-dicom-implementation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scapy

      # --- Add this step to log in to Docker Hub ---
      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Use the latest version
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # ---------------------------------------------

      - name: Start DICOM SCP (Orthanc in Docker)
        run: |
          echo "Starting Orthanc container..."
          # Use a specific version tag if desired, e.g., osimis/orthanc:23.11.2
          # Configure Orthanc using environment variables
          docker run \
            --detach \
            --rm \
            --name orthanc-scp-test \
            --publish 4242:4242 \
            -e VERBOSE_ENABLED=true \
            -e DICOM_AET=ORTHANC_CI \
            -e DICOM_PORT=4242 \
            osimis/orthanc --verbose # Start Orthanc in verbose mode

            # -e DICOM_AET=ORTHANC_CI: Sets Orthanc's AE Title
            # -e DICOM_PORT=4242: Sets the DICOM port *inside* the container
            # --publish 4242:4242: Exposes the internal port 4242 to the runner's localhost:4242

          echo "Waiting for Orthanc to start..."
          sleep 10 # Orthanc might take a bit longer to initialize than storescp

          echo "Checking if Orthanc container is running..."
          docker ps --filter name=orthanc-scp-test

      - name: Run DICOM Integration Test Script
        run: |
          python test_integration.py \
            --ip 127.0.0.1 \
            --port 11112 \
            --ae-title STORESCP \
            --calling-ae SCAPY_CI_SCU

      - name: Show SCP Logs on Failure
        if: failure()
        run: |
          echo "--- DICOM SCP Logs ---"
          docker logs dicom-scp-test || echo "Could not get SCP logs."

      - name: Stop DICOM SCP Container
        if: always()
        run: |
          echo "Stopping DICOM SCP container..."
          docker stop dicom-scp-test || echo "SCP container already stopped or could not be stopped."