name: DICOM Scapy Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-dicom-implementation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scapy
          sudo apt-get update && sudo apt-get install -y tshark


      # --- Add this step to log in to Docker Hub ---
      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Use the latest version
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # ---------------------------------------------

      - name: Start DICOM SCP (Orthanc in Docker)
        run: |
          echo "Starting Orthanc container..."
          # Use the official team image with a specific tag
          docker run \
            --detach \
            --rm \
            --name orthanc-scp-test \
            --publish 4242:4242 \
            -e VERBOSE_ENABLED=true \
            -e DICOM_AET=ORTHANC_CI \
            -e DICOM_PORT=4242 \
            orthancteam/orthanc:25.2.0 --verbose

          echo "Waiting for Orthanc to start..."
          sleep 10 # Orthanc might take a bit longer to initialize

          echo "Checking if Orthanc container is running..."
          docker ps --filter name=orthanc-scp-test
      
      - name: Start tcpdump capture
        id: start_tcpdump 
        run: |
          sudo tcpdump -i any -s 0 -w dicom_capture.pcap 'tcp port 4242' &
          pid=$!
          echo "tcpdump_pid=$!" >> $GITHUB_OUTPUT
          sleep 2 # Give tcpdump a moment to start

      - name: Run DICOM Integration Test Script against Orthanc
        id: test_script
        continue-on-error: true
        run: |
          python test_integration.py \
              --ip 127.0.0.1 \
              --port 4242 \
              --ae-title ORTHANC_CI \
              --calling-ae SCAPY_CI_SCU \
              --debug
      
      - name: Stop tcpdump capture
        if: always()
        run: |
          echo "Stopping tcpdump (PID: ${{ steps.start_tcpdump.outputs.tcpdump_pid }})..."
          # Check if the PID exists before trying to kill
          if [ -n "${{ steps.start_tcpdump.outputs.tcpdump_pid }}" ]; then
            sudo kill ${{ steps.start_tcpdump.outputs.tcpdump_pid }} || echo "tcpdump (PID: ${{ steps.start_tcpdump.outputs.tcpdump_pid }}) already stopped or kill failed."
          else
            echo "tcpdump PID not found in step outputs."
          fi
          sleep 2 # Allow buffer flush

      - name: Upload pcap artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dicom-pcap-capture
          path: dicom_capture.pcap

      - name: Show Orthanc Logs
        if: always()
        run: |
          echo "--- Orthanc SCP Logs ---"
          # Wait a tiny bit in case logs are still flushing
          sleep 2
          docker logs orthanc-scp-test || echo "Could not get Orthanc logs."

      - name: Stop Orthanc SCP Container
        if: always()
        run: |
          echo "Stopping Orthanc SCP container..."
          docker stop orthanc-scp-test || echo "Orthanc container already stopped or could not be stopped."
  
        # Fail the overall job if the test script step failed
      - name: Check test script outcome
        if: steps.test_script.outcome != 'success'
        run: |
          echo "Test script failed!"
          exit 1